{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Creates 6 Ubuntu 18.04 instances ready for Kubernetes",

  "Parameters" : {
    "SSHKey": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "Must be the name of an existing EC2 KeyPair"
    },
    "TestClusterID" : {
      "Description" : "Test Cluster ID wanted for this stack",
      "Type" : "Number",
      "MinValue" : "1",
      "MaxValue" : "99"
    }
  },

  "Mappings": {
    "Region2Examples" : {
      "us-east-1"      : { "Examples" : "https://s3.amazonaws.com/cloudformation-examples-us-east-1" },
      "us-west-2"      : { "Examples" : "https://s3-us-west-2.amazonaws.com/cloudformation-examples-us-west-2" },
      "us-west-1"      : { "Examples" : "https://s3-us-west-1.amazonaws.com/cloudformation-examples-us-west-1" },
      "eu-west-1"      : { "Examples" : "https://s3-eu-west-1.amazonaws.com/cloudformation-examples-eu-west-1" },
      "eu-west-2"      : { "Examples" : "https://s3-eu-west-2.amazonaws.com/cloudformation-examples-eu-west-2" },
      "eu-west-3"      : { "Examples" : "https://s3-eu-west-3.amazonaws.com/cloudformation-examples-eu-west-3" },
      "eu-central-1"   : { "Examples" : "https://s3-eu-central-1.amazonaws.com/cloudformation-examples-eu-central-1" },
      "ap-southeast-1" : { "Examples" : "https://s3-ap-southeast-1.amazonaws.com/cloudformation-examples-ap-southeast-1" },
      "ap-northeast-1" : { "Examples" : "https://s3-ap-northeast-1.amazonaws.com/cloudformation-examples-ap-northeast-1" },
      "ap-northeast-2" : { "Examples" : "https://s3-ap-northeast-2.amazonaws.com/cloudformation-examples-ap-northeast-2" },
      "ap-northeast-3" : { "Examples" : "https://s3-ap-northeast-3.amazonaws.com/cloudformation-examples-ap-northeast-3" },
      "ap-southeast-2" : { "Examples" : "https://s3-ap-southeast-2.amazonaws.com/cloudformation-examples-ap-southeast-2" },
      "ap-south-1"     : { "Examples" : "https://s3-ap-south-1.amazonaws.com/cloudformation-examples-ap-south-1" },
      "us-east-2"      : { "Examples" : "https://s3-us-east-2.amazonaws.com/cloudformation-examples-us-east-2" },
      "ca-central-1"   : { "Examples" : "https://s3-ca-central-1.amazonaws.com/cloudformation-examples-ca-central-1" },
      "sa-east-1"      : { "Examples" : "https://s3-sa-east-1.amazonaws.com/cloudformation-examples-sa-east-1" },
      "cn-north-1"     : { "Examples" : "https://s3.cn-north-1.amazonaws.com.cn/cloudformation-examples-cn-north-1" },
      "cn-northwest-1" : { "Examples" : "https://s3.cn-northwest-1.amazonaws.com.cn/cloudformation-examples-cn-northwest-1" }
    },

    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "HVM64"  },
      "t2.nano"     : { "Arch" : "HVM64"  },
      "t3.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t3.medium"   : { "Arch" : "HVM64"  },
      "t2.large"    : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "HVM64"  },
      "m1.medium"   : { "Arch" : "HVM64"  },
      "m1.large"    : { "Arch" : "HVM64"  },
      "m1.xlarge"   : { "Arch" : "HVM64"  },
      "m2.xlarge"   : { "Arch" : "HVM64"  },
      "m2.2xlarge"  : { "Arch" : "HVM64"  },
      "m2.4xlarge"  : { "Arch" : "HVM64"  },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.large"    : { "Arch" : "HVM64"  },
      "m4.xlarge"   : { "Arch" : "HVM64"  },
      "m4.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.4xlarge"  : { "Arch" : "HVM64"  },
      "m4.10xlarge" : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "HVM64"  },
      "c1.xlarge"   : { "Arch" : "HVM64"  },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "g2.8xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSInstanceType2NATArch" : {
      "t1.micro"    : { "Arch" : "NATHVM64"  },
      "t2.nano"     : { "Arch" : "NATHVM64"  },
      "t3.micro"    : { "Arch" : "NATHVM64"  },
      "t2.small"    : { "Arch" : "NATHVM64"  },
      "t3.medium"   : { "Arch" : "NATHVM64"  },
      "t2.large"    : { "Arch" : "NATHVM64"  },
      "m1.small"    : { "Arch" : "NATHVM64"  },
      "m1.medium"   : { "Arch" : "NATHVM64"  },
      "m1.large"    : { "Arch" : "NATHVM64"  },
      "m1.xlarge"   : { "Arch" : "NATHVM64"  },
      "m2.xlarge"   : { "Arch" : "NATHVM64"  },
      "m2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "m3.medium"   : { "Arch" : "NATHVM64"  },
      "m3.large"    : { "Arch" : "NATHVM64"  },
      "m3.xlarge"   : { "Arch" : "NATHVM64"  },
      "m3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.large"    : { "Arch" : "NATHVM64"  },
      "m4.xlarge"   : { "Arch" : "NATHVM64"  },
      "m4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.10xlarge" : { "Arch" : "NATHVM64"  },
      "c1.medium"   : { "Arch" : "NATHVM64"  },
      "c1.xlarge"   : { "Arch" : "NATHVM64"  },
      "c3.large"    : { "Arch" : "NATHVM64"  },
      "c3.xlarge"   : { "Arch" : "NATHVM64"  },
      "c3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.large"    : { "Arch" : "NATHVM64"  },
      "c4.xlarge"   : { "Arch" : "NATHVM64"  },
      "c4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.8xlarge"  : { "Arch" : "NATHVM64"  },
      "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
      "g2.8xlarge"  : { "Arch" : "NATHVMG2"  },
      "r3.large"    : { "Arch" : "NATHVM64"  },
      "r3.xlarge"   : { "Arch" : "NATHVM64"  },
      "r3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.xlarge"   : { "Arch" : "NATHVM64"  },
      "i2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.xlarge"   : { "Arch" : "NATHVM64"  },
      "d2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "hi1.4xlarge" : { "Arch" : "NATHVM64"  },
      "hs1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cr1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cc2.8xlarge" : { "Arch" : "NATHVM64"  }
    },

    "AWSRegionArch2AMI" : {
      "us-west-1"        : {"HVM64" : "ami-0bdb828fd58c52235"},
      "us-west-2"        : {"HVM64" : "ami-0a18d58f4acb1470b"}
      
    }

  },

  "Resources": {

    "Node1Ec2InstanceNif1": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "Kubernetes Node 1 Host Network Interface 1",
        "SubnetId": "subnet-0c5f6b74259680d98",
        "GroupSet": [ "sg-094b4dd5355d9ecee" ],
        "SourceDestCheck": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "node", "1", "nif-1" ] ] }
          },
          {
            "Key": "Email",
            "Value": "pl.gingembre@illumio.com"
          },
          {
            "Key": "Owner",
            "Value": "Pierre-Louis Gingembre"
          }
        ]
      }
    },

    "Node1Ec2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t3a.small",
        "ImageId": "ami-0edeb769c3a7a17dc",
        "KeyName": { "Ref": "SSHKey" },
        "NetworkInterfaces": [
          {
            "NetworkInterfaceId": { "Ref": "Node1Ec2InstanceNif1" },
            "DeviceIndex": "0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "node", "1" ] ] }
          },
          {
            "Key": "Email",
            "Value": "pl.gingembre@illumio.com"
          },
          {
            "Key": "Owner",
            "Value": "Pierre-Louis Gingembre"
          },
          {
            "Key": "Category",
            "Value": "Test"
          },
          {
            "Key": "Description",
            "Value": "Kubernetes Node"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "# Update the workload\n",
                "sudo apt update; sudo apt upgrade -y\n",
                "# Change hostname\n",
                "sudo hostnamectl set-hostname ",
                { "Fn::Join": [ "-", [ "node", "1" ] ] },
                "\n",
                "# Add illumio-demo.com domain in search\n",
                "sudo cat << EOF >> /etc/systemd/resolved.conf\n",
                "Domains=illumio-demo.com.\n",
                "EOF\n",
                "\n",
                "sudo systemctl restart systemd-resolved.service\n",
                "# Renew the machine-id\n",
                "sudo rm -rf /etc/machine-id; sudo rm /var/lib/dbus/machine-id; sudo systemd-machine-id-setup;\n",
                "# Reboot the node\n",
                "sudo reboot\n"
              ]
            ]
          }
        }
      }
    },

    "Node1Route53ARecord": {
      "Type": "AWS::Route53::RecordSet",
      "DependsOn": "Node1Ec2InstanceNif1",
      "Properties": {
        "HostedZoneName": "illumio-demo.com.",
        "Comment": { "Fn::Join": [ "", [ "Kubernetes Node 1 for Cluster ", { "Ref": "TestClusterID" } ] ] },
        "Name": { "Fn::Join": [ "", [ "node", "-", "1", ".cluster", "-", { "Ref": "TestClusterID" }, ".illumio-demo.com" ] ] },
        "TTL": "300",
        "Type": "A",
        "ResourceRecords" : [
          {
            "Fn::GetAtt" : [
              "Node1Ec2InstanceNif1",
              "PrimaryPrivateIpAddress"
            ]
          }
        ]
      }
    },

    "Node1Route53CnameRecord": {
      "Type": "AWS::Route53::RecordSet",
      "DependsOn": "Node1Route53ARecord",
      "Properties": {
        "HostedZoneName": "illumio-demo.com.",
        "Comment": { "Fn::Join": [ "", [ "Alias for Kubernetes Node 1 for Cluster ", { "Ref": "TestClusterID" } ] ] },
        "Name": { "Fn::Join": [ "", [ "n", "1", "c", { "Ref": "TestClusterID" }, ".illumio-demo.com" ] ] },
        "TTL": "300",
        "Type": "CNAME",
        "ResourceRecords" : [ { "Ref": "Node1Route53ARecord" } ]
      }
    },

    "Node2Ec2InstanceNif1": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "Kubernetes Node 2 Host Network Interface 1",
        "SubnetId": "subnet-004e78dea0bc72471",
        "GroupSet": [ "sg-094b4dd5355d9ecee" ],
        "SourceDestCheck": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "node", "2", "nif-1" ] ] }
          },
          {
            "Key": "Email",
            "Value": "pl.gingembre@illumio.com"
          },
          {
            "Key": "Owner",
            "Value": "Pierre-Louis Gingembre"
          }
        ]
      }
    },
  
    "Node2Ec2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t3a.small",
        "ImageId": "ami-0edeb769c3a7a17dc",
        "KeyName": { "Ref": "SSHKey" },
        "NetworkInterfaces": [
          {
            "NetworkInterfaceId": { "Ref": "Node2Ec2InstanceNif1" },
            "DeviceIndex": "0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "node", "2" ] ] }
          },
          {
            "Key": "Email",
            "Value": "pl.gingembre@illumio.com"
          },
          {
            "Key": "Owner",
            "Value": "Pierre-Louis Gingembre"
          },
          {
            "Key": "Category",
            "Value": "Test"
          },
          {
            "Key": "Description",
            "Value": "Kubernetes Node"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "# Update the workload\n",
                "sudo apt update; sudo apt upgrade -y\n",
                "# Change hostname\n",
                "sudo hostnamectl set-hostname ",
                { "Fn::Join": [ "-", [ "node", "2" ] ] },
                "\n",
                "# Add illumio-demo.com domain in search\n",
                "sudo cat << EOF >> /etc/systemd/resolved.conf\n",
                "Domains=illumio-demo.com.\n",
                "EOF\n",
                "\n",
                "sudo systemctl restart systemd-resolved.service\n",
                "# Renew the machine-id\n",
                "sudo rm -rf /etc/machine-id; sudo rm /var/lib/dbus/machine-id; sudo systemd-machine-id-setup;\n",
                "# Reboot the node\n",
                "sudo reboot\n"
              ]
            ]
          }
        }
      }
    },
  
    "Node2Route53ARecord": {
      "Type": "AWS::Route53::RecordSet",
      "DependsOn": "Node2Ec2InstanceNif1",
      "Properties": {
        "HostedZoneName": "illumio-demo.com.",
        "Comment": { "Fn::Join": [ "", [ "Kubernetes Node 2 for Cluster ", { "Ref": "TestClusterID" } ] ] },
        "Name": { "Fn::Join": [ "", [ "node", "-", "2", ".cluster", "-", { "Ref": "TestClusterID" }, ".illumio-demo.com" ] ] },
        "TTL": "300",
        "Type": "A",
        "ResourceRecords" : [
          {
            "Fn::GetAtt" : [
              "Node2Ec2InstanceNif1",
              "PrimaryPrivateIpAddress"
            ]
          }
        ]
      }
    },
  
    "Node2Route53CnameRecord": {
      "Type": "AWS::Route53::RecordSet",
      "DependsOn": "Node2Route53ARecord",
      "Properties": {
        "HostedZoneName": "illumio-demo.com.",
        "Comment": { "Fn::Join": [ "", [ "Alias for Kubernetes Node 2 for Cluster ", { "Ref": "TestClusterID" } ] ] },
        "Name": { "Fn::Join": [ "", [ "n", "2", "c", { "Ref": "TestClusterID" }, ".illumio-demo.com" ] ] },
        "TTL": "300",
        "Type": "CNAME",
        "ResourceRecords" : [ { "Ref": "Node2Route53ARecord" } ]
      }
    },
  
    "Node3Ec2InstanceNif1": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "Kubernetes Node Host Network Interface 1",
        "SubnetId": "subnet-097cb4efa88a22c03",
        "GroupSet": [ "sg-094b4dd5355d9ecee" ],
        "SourceDestCheck": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "node", "3", "nif-1" ] ] }
          },
          {
            "Key": "Email",
            "Value": "pl.gingembre@illumio.com"
          },
          {
            "Key": "Owner",
            "Value": "Pierre-Louis Gingembre"
          }
        ]
      }
    },
  
    "Node3Ec2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t3a.small",
        "ImageId": "ami-0edeb769c3a7a17dc",
        "KeyName": { "Ref": "SSHKey" },
        "NetworkInterfaces": [
          {
            "NetworkInterfaceId": { "Ref": "Node3Ec2InstanceNif1" },
            "DeviceIndex": "0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "node", "3" ] ] }
          },
          {
            "Key": "Email",
            "Value": "pl.gingembre@illumio.com"
          },
          {
            "Key": "Owner",
            "Value": "Pierre-Louis Gingembre"
          },
          {
            "Key": "Category",
            "Value": "Test"
          },
          {
            "Key": "Description",
            "Value": "Kubernetes Node"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "# Update the workload\n",
                "sudo apt update; sudo apt upgrade -y\n",
                "# Change hostname\n",
                "sudo hostnamectl set-hostname ",
                { "Fn::Join": [ "-", [ "node", "3" ] ] },
                "\n",
                "# Add illumio-demo.com domain in search\n",
                "sudo cat << EOF >> /etc/systemd/resolved.conf\n",
                "Domains=illumio-demo.com.\n",
                "EOF\n",
                "\n",
                "sudo systemctl restart systemd-resolved.service\n",
                "# Renew the machine-id\n",
                "sudo rm -rf /etc/machine-id; sudo rm /var/lib/dbus/machine-id; sudo systemd-machine-id-setup;\n",
                "# Reboot the node\n",
                "sudo reboot\n"
              ]
            ]
          }
        }
      }
    },
  
    "Node3Route53ARecord": {
      "Type": "AWS::Route53::RecordSet",
      "DependsOn": "Node3Ec2InstanceNif1",
      "Properties": {
        "HostedZoneName": "illumio-demo.com.",
        "Comment": { "Fn::Join": [ "", [ "Kubernetes Node 3 for Cluster ", { "Ref": "TestClusterID" } ] ] },
        "Name": { "Fn::Join": [ "", [ "node", "-", "3", ".cluster", "-", { "Ref": "TestClusterID" }, ".illumio-demo.com" ] ] },
        "TTL": "300",
        "Type": "A",
        "ResourceRecords" : [
          {
            "Fn::GetAtt" : [
              "Node3Ec2InstanceNif1",
              "PrimaryPrivateIpAddress"
            ]
          }
        ]
      }
    },
  
    "Node3Route53CnameRecord": {
      "Type": "AWS::Route53::RecordSet",
      "DependsOn": "Node3Route53ARecord",
      "Properties": {
        "HostedZoneName": "illumio-demo.com.",
        "Comment": { "Fn::Join": [ "", [ "Alias for Kubernetes Node 3 for Cluster ", { "Ref": "TestClusterID" } ] ] },
        "Name": { "Fn::Join": [ "", [ "n", "3", "c", { "Ref": "TestClusterID" }, ".illumio-demo.com" ] ] },
        "TTL": "300",
        "Type": "CNAME",
        "ResourceRecords" : [ { "Ref": "Node3Route53ARecord" } ]
      }
    },
  
    "Node4Ec2InstanceNif1": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "Kubernetes Node Host Network Interface 1",
        "SubnetId": "subnet-0d414c1207f6a6045",
        "GroupSet": [ "sg-094b4dd5355d9ecee" ],
        "SourceDestCheck": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "node", "4", "nif-1" ] ] }
          },
          {
            "Key": "Email",
            "Value": "pl.gingembre@illumio.com"
          },
          {
            "Key": "Owner",
            "Value": "Pierre-Louis Gingembre"
          }
        ]
      }
    },

    "Node4Ec2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t3a.small",
        "ImageId": "ami-0edeb769c3a7a17dc",
        "KeyName": { "Ref": "SSHKey" },
        "NetworkInterfaces": [
          {
            "NetworkInterfaceId": { "Ref": "Node4Ec2InstanceNif1" },
            "DeviceIndex": "0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "node", "4" ] ] }
          },
          {
            "Key": "Email",
            "Value": "pl.gingembre@illumio.com"
          },
          {
            "Key": "Owner",
            "Value": "Pierre-Louis Gingembre"
          },
          {
            "Key": "Category",
            "Value": "Test"
          },
          {
            "Key": "Description",
            "Value": "Kubernetes Node"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "# Update the workload\n",
                "sudo apt update; sudo apt upgrade -y\n",
                "# Change hostname\n",
                "sudo hostnamectl set-hostname ",
                { "Fn::Join": [ "-", [ "node", "4" ] ] },
                "\n",
                "# Add illumio-demo.com domain in search\n",
                "sudo cat << EOF >> /etc/systemd/resolved.conf\n",
                "Domains=illumio-demo.com.\n",
                "EOF\n",
                "\n",
                "sudo systemctl restart systemd-resolved.service\n",
                "# Renew the machine-id\n",
                "sudo rm -rf /etc/machine-id; sudo rm /var/lib/dbus/machine-id; sudo systemd-machine-id-setup;\n",
                "# Reboot the node\n",
                "sudo reboot\n"
              ]
            ]
          }
        }
      }
    },

    "Node4Route53ARecord": {
      "Type": "AWS::Route53::RecordSet",
      "DependsOn": "Node4Ec2InstanceNif1",
      "Properties": {
        "HostedZoneName": "illumio-demo.com.",
        "Comment": { "Fn::Join": [ "", [ "Kubernetes Node 4 for Cluster", { "Ref": "TestClusterID" } ] ] },
        "Name": { "Fn::Join": [ "", [ "node", "-", "4", ".cluster", "-", { "Ref": "TestClusterID" }, ".illumio-demo.com" ] ] },
        "TTL": "300",
        "Type": "A",
        "ResourceRecords" : [
          {
            "Fn::GetAtt" : [
              "Node4Ec2InstanceNif1",
              "PrimaryPrivateIpAddress"
            ]
          }
        ]
      }
    },

    "Node4Route53CnameRecord": {
      "Type": "AWS::Route53::RecordSet",
      "DependsOn": "Node4Route53ARecord",
      "Properties": {
        "HostedZoneName": "illumio-demo.com.",
        "Comment": { "Fn::Join": [ "", [ "Alias for Kubernetes Node 4 for Cluster ", { "Ref": "TestClusterID" } ] ] },
        "Name": { "Fn::Join": [ "", [ "n", "4", "c", { "Ref": "TestClusterID" }, ".illumio-demo.com" ] ] },
        "TTL": "300",
        "Type": "CNAME",
        "ResourceRecords" : [ { "Ref": "Node4Route53ARecord" } ]
      }
    },

    "Node5Ec2InstanceNif1": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "Kubernetes Node Host Network Interface 1",
        "SubnetId": "subnet-0cc9d368af225d9f3",
        "GroupSet": [ "sg-094b4dd5355d9ecee" ],
        "SourceDestCheck": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "node", "5", "nif-1" ] ] }
          },
          {
            "Key": "Email",
            "Value": "pl.gingembre@illumio.com"
          },
          {
            "Key": "Owner",
            "Value": "Pierre-Louis Gingembre"
          }
        ]
      }
    },

    "Node5Ec2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t3a.small",
        "ImageId": "ami-0edeb769c3a7a17dc",
        "KeyName": { "Ref": "SSHKey" },
        "NetworkInterfaces": [
          {
            "NetworkInterfaceId": { "Ref": "Node5Ec2InstanceNif1" },
            "DeviceIndex": "0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "node", "5" ] ] }
          },
          {
            "Key": "Email",
            "Value": "pl.gingembre@illumio.com"
          },
          {
            "Key": "Owner",
            "Value": "Pierre-Louis Gingembre"
          },
          {
            "Key": "Category",
            "Value": "Test"
          },
          {
            "Key": "Description",
            "Value": "Kubernetes Node"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "# Update the workload\n",
                "sudo apt update; sudo apt upgrade -y\n",
                "# Change hostname\n",
                "sudo hostnamectl set-hostname ",
                { "Fn::Join": [ "-", [ "node", "5"] ] },
                "\n",
                "# Add illumio-demo.com domain in search\n",
                "sudo cat << EOF >> /etc/systemd/resolved.conf\n",
                "Domains=illumio-demo.com.\n",
                "EOF\n",
                "\n",
                "sudo systemctl restart systemd-resolved.service\n",
                "# Renew the machine-id\n",
                "sudo rm -rf /etc/machine-id; sudo rm /var/lib/dbus/machine-id; sudo systemd-machine-id-setup;\n",
                "# Reboot the node\n",
                "sudo reboot\n"
              ]
            ]
          }
        }
      }
    },

    "Node5Route53ARecord": {
      "Type": "AWS::Route53::RecordSet",
      "DependsOn": "Node5Ec2InstanceNif1",
      "Properties": {
        "HostedZoneName": "illumio-demo.com.",
        "Comment": { "Fn::Join": [ "", [ "Kubernetes Node 5 for Cluster", { "Ref": "TestClusterID" } ] ] },
        "Name": { "Fn::Join": [ "", [ "node", "-", "5", ".cluster", "-", { "Ref": "TestClusterID" }, ".illumio-demo.com" ] ] },
        "TTL": "300",
        "Type": "A",
        "ResourceRecords" : [
          {
            "Fn::GetAtt" : [
              "Node5Ec2InstanceNif1",
              "PrimaryPrivateIpAddress"
            ]
          }
        ]
      }
    },

    "Node5Route53CnameRecord": {
      "Type": "AWS::Route53::RecordSet",
      "DependsOn": "Node5Route53ARecord",
      "Properties": {
        "HostedZoneName": "illumio-demo.com.",
        "Comment": { "Fn::Join": [ "", [ "Alias for Kubernetes Node 5 for Cluster ", { "Ref": "TestClusterID" } ] ] },
        "Name": { "Fn::Join": [ "", [ "n", "5", "c", { "Ref": "TestClusterID" }, ".illumio-demo.com" ] ] },
        "TTL": "300",
        "Type": "CNAME",
        "ResourceRecords" : [ { "Ref": "Node5Route53ARecord" } ]
      }
    },

    "Node6Ec2InstanceNif1": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "Kubernetes Node Host Network Interface 1",
        "SubnetId": "subnet-0ecc0e51d09200712",
        "GroupSet": [ "sg-094b4dd5355d9ecee" ],
        "SourceDestCheck": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "node", "6", "nif-1" ] ] }
          },
          {
            "Key": "Email",
            "Value": "pl.gingembre@illumio.com"
          },
          {
            "Key": "Owner",
            "Value": "Pierre-Louis Gingembre"
          }
        ]
      }
    },
  
    "Node6Ec2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t3a.small",
        "ImageId": "ami-0edeb769c3a7a17dc",
        "KeyName": { "Ref": "SSHKey" },
        "NetworkInterfaces": [
          {
            "NetworkInterfaceId": { "Ref": "Node6Ec2InstanceNif1" },
            "DeviceIndex": "0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "node", "6" ] ] }
          },
          {
            "Key": "Email",
            "Value": "pl.gingembre@illumio.com"
          },
          {
            "Key": "Owner",
            "Value": "Pierre-Louis Gingembre"
          },
          {
            "Key": "Category",
            "Value": "Test"
          },
          {
            "Key": "Description",
            "Value": "Kubernetes Node"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "# Update the workload\n",
                "sudo apt update; sudo apt upgrade -y\n",
                "# Change hostname\n",
                "sudo hostnamectl set-hostname ",
                { "Fn::Join": [ "-", [ "node", "6"] ] },
                "\n",
                "# Add illumio-demo.com domain in search\n",
                "sudo cat << EOF >> /etc/systemd/resolved.conf\n",
                "Domains=illumio-demo.com.\n",
                "EOF\n",
                "\n",
                "sudo systemctl restart systemd-resolved.service\n",
                "# Renew the machine-id\n",
                "sudo rm -rf /etc/machine-id; sudo rm /var/lib/dbus/machine-id; sudo systemd-machine-id-setup;\n",
                "# Reboot the node\n",
                "sudo reboot\n"
              ]
            ]
          }
        }
      }
    },
  
    "Node6Route53ARecord": {
      "Type": "AWS::Route53::RecordSet",
      "DependsOn": "Node6Ec2InstanceNif1",
      "Properties": {
        "HostedZoneName": "illumio-demo.com.",
        "Comment": { "Fn::Join": [ "", [ "Kubernetes Node 6 for Cluster", { "Ref": "TestClusterID" } ] ] },
        "Name": { "Fn::Join": [ "", [ "node", "-", "6", ".cluster", "-", { "Ref": "TestClusterID" }, ".illumio-demo.com" ] ] },
        "TTL": "300",
        "Type": "A",
        "ResourceRecords" : [
          {
            "Fn::GetAtt" : [
              "Node6Ec2InstanceNif1",
              "PrimaryPrivateIpAddress"
            ]
          }
        ]
      }
    },
  
    "Node6Route53CnameRecord": {
      "Type": "AWS::Route53::RecordSet",
      "DependsOn": "Node6Route53ARecord",
      "Properties": {
        "HostedZoneName": "illumio-demo.com.",
        "Comment": { "Fn::Join": [ "", [ "Alias for Kubernetes Node 6 for Cluster ", { "Ref": "TestClusterID" } ] ] },
        "Name": { "Fn::Join": [ "", [ "n", "6", "c", { "Ref": "TestClusterID" }, ".illumio-demo.com" ] ] },
        "TTL": "300",
        "Type": "CNAME",
        "ResourceRecords" : [ { "Ref": "Node6Route53ARecord" } ]
      }
    }
  
  },

  "Outputs": {
    "Node1IP": {
      "Value": { "Fn::GetAtt": [ "Node1Ec2InstanceNif1", "PrimaryPrivateIpAddress" ] },
      "Description": "IP address of node-1"
    },
    "Node1FQDN": {
      "Value": { "Ref": "Node1Route53ARecord" },
      "Description": "FQDN of node-1"
    },
    "Node1FQDNAlias": {
      "Value": { "Ref": "Node1Route53CnameRecord" },
      "Description": "Alias FQDN of node-1"
    },
    "Node2IP": {
      "Value": { "Fn::GetAtt": [ "Node2Ec2InstanceNif1", "PrimaryPrivateIpAddress" ] },
      "Description": "IP address of node-2"
    },
    "Node2FQDN": {
      "Value": { "Ref": "Node2Route53ARecord" },
      "Description": "FQDN of node-2"
    },
    "Node2FQDNAlias": {
      "Value": { "Ref": "Node2Route53CnameRecord" },
      "Description": "Alias FQDN of node-2"
    },
    "Node3IP": {
      "Value": { "Fn::GetAtt": [ "Node3Ec2InstanceNif1", "PrimaryPrivateIpAddress" ] },
      "Description": "IP address of node-3"
    },
    "Node3FQDN": {
      "Value": { "Ref": "Node3Route53ARecord" },
      "Description": "FQDN of node-3"
    },
    "Node3FQDNAlias": {
      "Value": { "Ref": "Node3Route53CnameRecord" },
      "Description": "Alias FQDN of node-3"
    },
    "Node4IP": {
      "Value": { "Fn::GetAtt": [ "Node4Ec2InstanceNif1", "PrimaryPrivateIpAddress" ] },
      "Description": "IP address of node-4"
    },
    "Node4FQDN": {
      "Value": { "Ref": "Node4Route53ARecord" },
      "Description": "FQDN of node-4"
    },
    "Node4FQDNAlias": {
      "Value": { "Ref": "Node4Route53CnameRecord" },
      "Description": "Alias FQDN of node-4"
    },
    "Node5IP": {
      "Value": { "Fn::GetAtt": [ "Node5Ec2InstanceNif1", "PrimaryPrivateIpAddress" ] },
      "Description": "IP address of node-5"
    },
    "Node5FQDN": {
      "Value": { "Ref": "Node5Route53ARecord" },
      "Description": "FQDN of node-5"
    },
    "Node5FQDNAlias": {
      "Value": { "Ref": "Node5Route53CnameRecord" },
      "Description": "Alias FQDN of node-5"
    },
    "Node6IP": {
      "Value": { "Fn::GetAtt": [ "Node6Ec2InstanceNif1", "PrimaryPrivateIpAddress" ] },
      "Description": "IP address of node-6"
    },
    "Node6FQDN": {
      "Value": { "Ref": "Node6Route53ARecord" },
      "Description": "FQDN of node-6"
    },
    "Node6FQDNAlias": {
      "Value": { "Ref": "Node6Route53CnameRecord" },
      "Description": "Alias FQDN of node-6"
    }
  }

}
